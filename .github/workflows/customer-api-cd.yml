# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
     - master
  pull_request:
    types:
      - opened
      - synchronize

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-customer-api:
    name: Deploy Customer API to Gateway and Dev Portal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Backup Insomnia Spec
        run: |
          mkdir ./spec-backup
          cp ./.insomnia/ApiSpec/*.yml ./spec-backup
          ls ./spec-backup            
      #Installing the inso, deck and portal cli
      - name: Install NodeJS
        uses: actions/setup-node@v1
      - name: Install Deck  
        run: |
          curl -sL https://github.com/kong/deck/releases/download/v1.6.0/deck_1.6.0_linux_amd64.tar.gz -o deck.tar.gz
          tar -xf deck.tar.gz -C /tmp
          sudo cp /tmp/deck /usr/local/bin/ 
      - name: Install inso
        run: npm install -g insomnia-inso@2.3.0 kong-portal-cli@3.1.0 
     
          
      # API Spec linting
      - name: Validate specification
        run: inso lint spec customer-api
      
      # Deploy Customer OAS spec to the Dev Portal
      - name: Prepare URL 4 Portal
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '${'
          tokenSuffix: '}$'
          files: '["./.insomnia/ApiSpec/*.yml"]'
        env:
          UPSTREAM_SERVER_URL: '${{ secrets.KONG_PROXY_ADDR }}'           
      # We will push to the Kong dev portal
      - name: Deploy to dev portal
        run: |          
          inso export spec customer-api --output workspaces/customer/specs/customer.yaml
          cp workspaces/customer/cli.conf.yaml.example workspaces/customer/cli.conf.yaml
          portal deploy --preserve customer
        env:
          KONG_ADMIN_URL: ${{ secrets.KONG_ADDR }}
          KONG_ADMIN_TOKEN: ${{ secrets.KONG_ADMIN_TOKEN }}
            
      - name: Restore OAS Spec
        run: |
          cp  ./spec-backup/*.yml ./.insomnia/ApiSpec                   
      - name: Prepare URL 4 Declarative Services
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '${'
          tokenSuffix: '}$'
          files: '["./.insomnia/ApiSpec/*.yml"]'
        env:
          UPSTREAM_SERVER_URL: '${{ secrets.UPSTREAM_SERVER_URL }}'
          SUMO_SERVER_URL: '${{ secrets.SUMO_SERVER_URL }}'
          OPA_HOST: '${{ secrets.OPA_HOST }}'
          OPA_PORT: '${{ secrets.OPA_PORT }}'
      
      # Generate declarative config
      - name: Generate declarative config
        run: |
          inso generate config customer-api --type declarative --output kong.yaml 
          cat kong.yaml

      # Ping the Kong instance
      # Sync to Kong
      - name: Update Kong
        run: deck ping --headers "kong-admin-token:${{ secrets.KONG_ADMIN_TOKEN }}" --kong-addr ${{ secrets.KONG_ADDR }} && deck sync --headers "kong-admin-token:${{ secrets.KONG_ADMIN_TOKEN }}" --workspace customer --skip-consumers --kong-addr ${{ secrets.KONG_ADDR }} > sync.output.txt
            
      # Run tests
      - name: Run test suites
        run: inso run test customer-api -e ${{ env.TARGET_ENVIRONMENT }}
        env:
          TARGET_ENVIRONMENT: Azure
